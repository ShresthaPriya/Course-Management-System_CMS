package loginsignup;

import admindashboard.AdminDash;
import admindashboard.AdminDashboard;
import studentdashboard.StudentDashboard;
import instructordashboard.InstructorDashboard;
import java.awt.Cursor;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import utilities.Connection;
import javax.swing.ImageIcon;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import java.awt.Color;
import javax.swing.JLabel;

public class LoginForm extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public LoginForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        loginPageMainText = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameLabel.setIcon(new ImageIcon("C:\\Users\\ASUS\\OneDrive\\Documents\\CMS-main\\icons8-username-48.png"));
        usernameTextField = new javax.swing.JTextField();
        passwordLabel1 = new javax.swing.JLabel();
        passwordLabel1.setIcon(new ImageIcon("C:\\Users\\ASUS\\Downloads\\i-password.jpg"));
        passwordTextField = new javax.swing.JTextField();
        userTypeLabel = new javax.swing.JLabel();
        userTypeLabel.setIcon(new ImageIcon("C:\\Users\\ASUS\\OneDrive\\Documents\\CMS-main\\Another.png"));
        userTypeDropdown = new javax.swing.JComboBox<>();
        loginButton = new javax.swing.JButton();
        loginButton.setBackground(new Color(175, 162, 187));
        loginButton.setIcon(new ImageIcon("C:\\Users\\ASUS\\OneDrive\\Documents\\CMS-main\\logout12.png"));
        registerHereHyperlink = new javax.swing.JLabel();
        registerHereInfoText = new javax.swing.JLabel();
        mainColorPanelDecor = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(175, 167, 187));

        loginPageMainText.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        loginPageMainText.setText("Welcome to the Login Panel");

        usernameLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        usernameLabel.setText("Username:");

        passwordLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        passwordLabel1.setText("Password:");

        userTypeLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        userTypeLabel.setText("User Type:");

        userTypeDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- SELECT --", "Student", "Admin", "Instructor" }));
        userTypeDropdown.setToolTipText("");

        loginButton.setText("LOGIN");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        registerHereHyperlink.setForeground(new java.awt.Color(255, 102, 102));
        registerHereHyperlink.setText("Register Here");
        registerHereHyperlink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                registerHereHyperlinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                registerHereHyperlinkMouseEntered(evt);
            }
        });

        registerHereInfoText.setText("Are you a new here ?");

        mainColorPanelDecor.setBackground(new java.awt.Color(175, 167, 187));
        
        lblNewLabel = new JLabel("New label");
        lblNewLabel.setIcon(new ImageIcon("C:\\Users\\ASUS\\OneDrive\\Documents\\CMS-main\\heraldnew.png"));

        javax.swing.GroupLayout mainColorPanelDecorLayout = new javax.swing.GroupLayout(mainColorPanelDecor);
        mainColorPanelDecorLayout.setHorizontalGroup(
        	mainColorPanelDecorLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(Alignment.TRAILING, mainColorPanelDecorLayout.createSequentialGroup()
        			.addContainerGap(201, Short.MAX_VALUE)
        			.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE)
        			.addGap(189))
        );
        mainColorPanelDecorLayout.setVerticalGroup(
        	mainColorPanelDecorLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(mainColorPanelDecorLayout.createSequentialGroup()
        			.addGap(226)
        			.addComponent(lblNewLabel)
        			.addContainerGap(278, Short.MAX_VALUE))
        );
        mainColorPanelDecor.setLayout(mainColorPanelDecorLayout);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(layout.createSequentialGroup()
        			.addComponent(mainColorPanelDecor, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGroup(layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(layout.createSequentialGroup()
        					.addGap(68)
        					.addGroup(layout.createParallelGroup(Alignment.LEADING)
        						.addGroup(layout.createSequentialGroup()
        							.addGap(28)
        							.addComponent(registerHereInfoText)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(registerHereHyperlink, GroupLayout.PREFERRED_SIZE, 84, GroupLayout.PREFERRED_SIZE))
        						.addGroup(layout.createSequentialGroup()
        							.addGroup(layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(passwordLabel1, GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
        								.addComponent(usernameLabel, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 107, GroupLayout.PREFERRED_SIZE)
        								.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        									.addComponent(userTypeLabel, GroupLayout.PREFERRED_SIZE, 106, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED)))
        							.addGroup(layout.createParallelGroup(Alignment.LEADING, false)
        								.addGroup(layout.createSequentialGroup()
        									.addPreferredGap(ComponentPlacement.RELATED)
        									.addComponent(usernameTextField, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE))
        								.addComponent(userTypeDropdown, Alignment.TRAILING, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        								.addComponent(passwordTextField, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE)))
        						.addGroup(layout.createSequentialGroup()
        							.addComponent(loginPageMainText, GroupLayout.PREFERRED_SIZE, 258, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)))
        					.addGap(71))
        				.addGroup(layout.createSequentialGroup()
        					.addGap(154)
        					.addComponent(loginButton)
        					.addContainerGap())))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addComponent(mainColorPanelDecor, GroupLayout.DEFAULT_SIZE, 584, Short.MAX_VALUE)
        		.addGroup(layout.createSequentialGroup()
        			.addGap(139)
        			.addComponent(loginPageMainText, GroupLayout.PREFERRED_SIZE, 28, GroupLayout.PREFERRED_SIZE)
        			.addGap(55)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(usernameLabel)
        				.addComponent(usernameTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(passwordTextField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(passwordLabel1))
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(userTypeLabel)
        				.addComponent(userTypeDropdown, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(28)
        			.addComponent(loginButton)
        			.addGap(18)
        			.addGroup(layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(registerHereInfoText)
        				.addComponent(registerHereHyperlink))
        			.addContainerGap(171, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        usernameLabel.getAccessibleContext().setAccessibleName("username");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void registerHereHyperlinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerHereHyperlinkMouseClicked
        dispose();
        SignupForm signupForm = new SignupForm();
        signupForm.setLocationRelativeTo(null);
        signupForm.setVisible(true);
    }//GEN-LAST:event_registerHereHyperlinkMouseClicked

    private void registerHereHyperlinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_registerHereHyperlinkMouseEntered
        // TODO add your handling code here:
        registerHereHyperlink.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
    }//GEN-LAST:event_registerHereHyperlinkMouseEntered

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        String sql = "";
        try {
            String username = usernameTextField.getText();
            String password = passwordTextField.getText();
            String userType = userTypeDropdown.getSelectedItem().toString();

            boolean checkValidations = checkForValidation(username, password, userType);

            if (!checkValidations) {
                return;
            }

            java.sql.Connection conn = Connection.getConnection();

            if (userType.toLowerCase().equals("student")) {
                sql = "SELECT * FROM STUDENT WHERE USERNAME =? and PASSWORD =? AND USER_TYPE =?";
            } else if (userType.toLowerCase().equals("admin")) {
                sql = "SELECT * FROM COURSE_ADMIN WHERE USERNAME =? and PASSWORD =? AND USER_TYPE =?";
            } else {
                sql = "SELECT * FROM INSTRUCTOR WHERE USERNAME =? and PASSWORD =? AND USER_TYPE =?";
            }

            PreparedStatement preparedStmt = conn.prepareStatement(sql);
            preparedStmt.setString(1, username);
            preparedStmt.setString(2, password);
            preparedStmt.setString(3, userType.toLowerCase());

            ResultSet rs = preparedStmt.executeQuery();

            if (rs.next() && !rs.next()) {
                JOptionPane.showMessageDialog(this, "Successfully Logged In !");
                dispose();
                if (userType.toLowerCase().equals("student")) {
                    StudentDashboard stdDash = new StudentDashboard(username, userType);
                    stdDash.setLocationRelativeTo(null);
                    stdDash.setVisible(true);
                } else if (userType.toLowerCase().equals("instructor")) {
                    InstructorDashboard stdDash = new InstructorDashboard(username, userType);
                    stdDash.setLocationRelativeTo(null);
                    stdDash.setVisible(true);
                } else {
                    AdminDash adminDash1 = new AdminDash();
                    adminDash1.setLocationRelativeTo(null);
                    adminDash1.setVisible(true);
                }

            } else {
                JOptionPane.showMessageDialog(this, "Details not found !");
            }

        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_loginButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton loginButton;
    private javax.swing.JLabel loginPageMainText;
    private javax.swing.JPanel mainColorPanelDecor;
    private javax.swing.JLabel passwordLabel1;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JLabel registerHereHyperlink;
    private javax.swing.JLabel registerHereInfoText;
    private javax.swing.JComboBox<String> userTypeDropdown;
    private javax.swing.JLabel userTypeLabel;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    private JLabel lblNewLabel;
    // End of variables declaration//GEN-END:variables

    private boolean checkForValidation(String username, String password, String userType) {
        if (username.isBlank()) {
            JOptionPane.showMessageDialog(this, "Username field is blank");
            return false;
        }

        if (password.isBlank()) {
            JOptionPane.showMessageDialog(this, "Password field is blank");
            return false;
        }
        if (userType.equals("-- SELECT --")) {
            JOptionPane.showMessageDialog(this, "Please select user type");
            return false;
        }
        return true;
    }
}
